---
- name: assert backup path
  ansible.builtin.file:
    path: "{{ ansible_user_dir }}{{ db.backup_dir }}"
    state: directory
    mode: "0755"

- name: perform backup
  block:
    - name: dump database
      community.mysql.mysql_db:
        name: "{{ db.db_name }}"
        state: dump
        target: "{{ dump_file_path }}"
        single_transaction: true
        dump_extra_args: --no-tablespaces
        quick: true
        login_password: "{{ db.db_password }}"
      register: dmp_result

    - name: compress dump file
      community.general.archive:
        path: "{{ dump_file_path }}"
        format: "bz2"
        remove: true
      register: arc_result

    - name: fetch compressed dump file
      ansible.builtin.fetch:
        src: "{{ arc_result.dest }}"
        dest: "{{ backup_dest | ansible.builtin.expanduser }}"
        flat: true
      register: fet_result

    - name: find files to delete
      ansible.builtin.find:
        paths: "{{ backup_dest | ansible.builtin.expanduser }}"
        age: "{{ days_to_retain }}d"
        recurse: true
        patterns: '*.bz2'
      register: find_result

    - name: delete dump file from server
      ansible.builtin.file:
        path: "{{ item.path }}"
        state: absent
      with_items: "{{ find_result.files }}"
      register: del_result


  rescue:
    - name: send error email
      community.general.mail:
        host: "{{ brassgoggles.email.smtp_host }}"
        port: "{{ brassgoggles.email.smtp_port }}"
        username: "{{ brassgoggles.email.smtp_user }}"
        password: "{{ brassgoggles.email.smtp_pass }}"
        from: "{{ brassgoggles.email.smtp_user}}"
        to: "{{ brassgoggles.email.email_to }}"
        subject: Nightly Backup Failed
        body: "{{ lookup('template', 'backup_fail.j2') }}"
      delegate_to: localhost

- name: send completion message
  community.general.mail:
    host: "{{ brassgoggles.email.smtp_host }}"
    port: "{{ brassgoggles.email.smtp_port }}"
    username: "{{ brassgoggles.email.smtp_user }}"
    password: "{{ brassgoggles.email.smtp_pass }}"
    from: "{{ brassgoggles.email.smtp_user}}"
    to: "{{ brassgoggles.email.email_to }}"
    subject: Nightly Backup Complete
    body: "{{ db.db_name }} backup complete."
  delegate_to: localhost
